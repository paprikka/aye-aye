{"version":3,"file":"content.js","sources":["../src/content.ts"],"sourcesContent":["(async () => {\n  const make = () => {\n    const closeButtonElement = document.createElement(\"button\");\n    closeButtonElement.classList.add(`ayeaye__close-button`);\n    closeButtonElement.textContent = \"Close\";\n    closeButtonElement.onclick = () => api.dispose();\n\n    const frame = document.createElement(\"iframe\");\n    frame.classList.add(`ayeaye__frame`);\n    frame.src = chrome.runtime.getURL(\"preview.html\");\n\n    const dialogElement = document.createElement(\"dialog\");\n    dialogElement.classList.add(\"ayeaye__dialog\");\n\n    dialogElement.appendChild(frame);\n    dialogElement.appendChild(closeButtonElement);\n    document.body.appendChild(dialogElement);\n\n    const onHandshake = (event) => {\n      console.log({ event });\n      if (event.data === \"ayeaye::ready\") {\n        const html = document.querySelector(\"body\")!.innerHTML;\n        frame.contentWindow!.postMessage(\n          {\n            htmlContent: html,\n            baseURL: window.location.href,\n          },\n          \"*\"\n        );\n      }\n    };\n\n    const api = {\n      show: () => {\n        window.addEventListener(\"message\", onHandshake);\n        dialogElement.showModal();\n      },\n      hide: () => {\n        dialogElement.close();\n      },\n      dispose: () => {\n        // we could use {once: true} in addEventListener, but this way we can\n        // support lifereload when testing the page without setting up an entire\n        // test env.\n        window.removeEventListener(\"message\", onHandshake);\n        api.hide();\n        dialogElement.remove();\n      },\n    };\n\n    return api;\n  };\n\n  if (\"ayeaye\" in window) {\n    (window as any).ayeaye.dispose();\n  }\n\n  (window as any).ayeaye = make();\n  (window as any).ayeaye.show();\n})();\n"],"names":["make","closeButtonElement","document","createElement","classList","add","textContent","onclick","api","dispose","frame","src","chrome","runtime","getURL","dialogElement","appendChild","body","onHandshake","event","console","log","data","html","querySelector","innerHTML","contentWindow","postMessage","htmlContent","baseURL","window","location","href","show","addEventListener","showModal","hide","close","removeEventListener","remove","ayeaye"],"mappings":"CAAC,SAAY,CACX,MAAMA,EAAOA,IAAM,CACXC,MAAAA,EAAqBC,SAASC,cAAc,QAAQ,EACvCC,EAAAA,UAAUC,IAAK,sBAAqB,EACvDJ,EAAmBK,YAAc,QACdC,EAAAA,QAAU,IAAMC,EAAIC,QAAQ,EAEzCC,MAAAA,EAAQR,SAASC,cAAc,QAAQ,EACvCC,EAAAA,UAAUC,IAAK,eAAc,EACnCK,EAAMC,IAAMC,OAAOC,QAAQC,OAAO,cAAc,EAE1CC,MAAAA,EAAgBb,SAASC,cAAc,QAAQ,EACvCC,EAAAA,UAAUC,IAAI,gBAAgB,EAE5CU,EAAcC,YAAYN,CAAK,EAC/BK,EAAcC,YAAYf,CAAkB,EACnCgB,SAAAA,KAAKD,YAAYD,CAAa,EAEvC,MAAMG,EAAyBC,GAAA,CAEzBA,GADJC,QAAQC,IAAI,CAAEF,MAAAA,CAAAA,CAAO,EACjBA,EAAMG,OAAS,gBAAiB,CAClC,MAAMC,EAAOrB,SAASsB,cAAc,MAAM,EAAGC,UAC7Cf,EAAMgB,cAAeC,YACnB,CACEC,YAAaL,EACbM,QAASC,OAAOC,SAASC,MAE3B,GACF,EACF,EAGIxB,EAAM,CACVyB,KAAMA,IAAM,CACHC,OAAAA,iBAAiB,UAAWhB,CAAW,EAC9CH,EAAcoB,UAAU,CAC1B,EACAC,KAAMA,IAAM,CACVrB,EAAcsB,MAAM,CACtB,EACA5B,QAASA,IAAM,CAIN6B,OAAAA,oBAAoB,UAAWpB,CAAW,EACjDV,EAAI4B,KAAK,EACTrB,EAAcwB,OAAO,CACvB,CAAA,EAGK/B,OAAAA,CAAAA,EAGL,WAAYsB,QACbA,OAAeU,OAAO/B,UAGxBqB,OAAeU,OAASxC,IACxB8B,OAAeU,OAAOP,MACzB,GAAG"}